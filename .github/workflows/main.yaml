# name: Build and Test project

# 'on':
#   pull_request:
#     types:
#       - opened
#     paths:
#       - Assets/**
#       - Packages/**
#   workflow_dispatch: {}

# jobs:

#   buildForAllSupportedPlatforms:
#     name: Build for ${{ matrix.targetPlatform }}
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         targetPlatform:
#           - StandaloneWindows64
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#           lfs: true
#       - uses: actions/cache@v2
#         with:
#           path: Library
#           key: Library-${{ matrix.targetPlatform }}
#           restore-keys: Library-
#       - uses: game-ci/unity-builder@v2
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#           targetPlatform: ${{ matrix.targetPlatform }}
#           buildsPath: Builds
#       - uses: actions/upload-artifact@v2
#         with:
#           name: Build-${{ matrix.targetPlatform }}
#           path: Builds/${{ matrix.targetPlatform }}


#   testForAllSupportedPlatforms:
#     name: Test in ${{ matrix.testMode }}
#     runs-on: ubuntu-latest
#     permissions: write-all
#     strategy:
#       fail-fast: false
#       matrix:
#         targetPlatform:
#           - StandaloneWindows64
#         projectPath:
#           - ./
#         testMode:
#           - playmode
#           - editmode
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#           lfs: true
#       - uses: actions/cache@v2
#         with:
#           path: ${{ matrix.projectPath }}/Library
#           key: Library-${{ matrix.projectPath }}
#           restore-keys: |
#             Library-
#       - uses: game-ci/unity-test-runner@v2
#         id: tests
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#           projectPath: ${{ matrix.projectPath }}
#           testMode: ${{ matrix.testMode }}
#           artifactsPath: ${{ matrix.testMode }}-artifacts
#           githubToken: ${{ secrets.GITHUB_TOKEN }}
#           checkName: ${{ matrix.testMode }} Test Results
#           coverageOptions: >-
#             generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*
#       - uses: actions/upload-artifact@v2
#         if: always()
#         with:
#           name: Test results for ${{ matrix.testMode }}
#           path: ${{ steps.tests.outputs.artifactsPath }}
#       - uses: actions/upload-artifact@v2
#         if: always()
#         with:
#           name: Coverage results for ${{ matrix.testMode }}
#           path: ${{ steps.tests.outputs.coveragePath }}
